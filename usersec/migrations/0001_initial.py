# Generated by Django 4.0.2 on 2022-02-22 14:20

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HpcGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                ("resources_requested", models.JSONField()),
                ("resources_used", models.JSONField()),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the groups work",
                        max_length=512,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "ACTIVE"),
                            ("DELETED", "DELETED"),
                            ("EXPIRED", "EXPIRED"),
                        ],
                        help_text="Status of the group object",
                        max_length=16,
                    ),
                ),
                (
                    "gid",
                    models.IntegerField(help_text="Id of the group on the cluster", null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("folder", models.CharField(max_length=64)),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the group"),
                ),
                (
                    "current_version",
                    models.IntegerField(help_text="Currently active version of the group object"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="User creating the object",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                ("resources_requested", models.JSONField()),
                ("resources_used", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "ACTIVE"),
                            ("DELETED", "DELETED"),
                            ("EXPIRED", "EXPIRED"),
                        ],
                        help_text="Status of the user object",
                        max_length=16,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Additional information about the user",
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "uid",
                    models.IntegerField(help_text="Id of the user on the cluster", null=True),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Username of the user on the cluster",
                        max_length=32,
                    ),
                ),
                (
                    "first_names",
                    models.CharField(help_text="First name(s) of the user", max_length=32),
                ),
                (
                    "surname",
                    models.CharField(help_text="Surname of the user", max_length=32),
                ),
                (
                    "email",
                    models.CharField(help_text="Email address of the user", max_length=512),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Telephone number of the user",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the user account"),
                ),
                (
                    "current_version",
                    models.IntegerField(help_text="Currently active version of the user object"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="User creating the object",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "primary_group",
                    models.ForeignKey(
                        help_text="Primary group the user belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Associated Django user",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcUserVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                ("resources_requested", models.JSONField()),
                ("resources_used", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "ACTIVE"),
                            ("DELETED", "DELETED"),
                            ("EXPIRED", "EXPIRED"),
                        ],
                        help_text="Status of the user object",
                        max_length=16,
                    ),
                ),
                (
                    "description",
                    models.CharField(
                        help_text="Additional information about the user",
                        max_length=512,
                        null=True,
                    ),
                ),
                (
                    "uid",
                    models.IntegerField(help_text="Id of the user on the cluster", null=True),
                ),
                (
                    "username",
                    models.CharField(
                        help_text="Username of the user on the cluster",
                        max_length=32,
                    ),
                ),
                (
                    "first_names",
                    models.CharField(help_text="First name(s) of the user", max_length=32),
                ),
                (
                    "surname",
                    models.CharField(help_text="Surname of the user", max_length=32),
                ),
                (
                    "email",
                    models.CharField(help_text="Email address of the user", max_length=512),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Telephone number of the user",
                        max_length=32,
                        null=True,
                    ),
                ),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the user account"),
                ),
                (
                    "version",
                    models.IntegerField(help_text="Version of this user object"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="User creating the object",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "primary_group",
                    models.ForeignKey(
                        help_text="Primary group the user belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        help_text="Associated Django user",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcUserDeleteRequestVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                (
                    "version",
                    models.IntegerField(
                        help_text="Version number of this user delete request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcUserDeleteRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                (
                    "current_version",
                    models.IntegerField(
                        help_text="Currently active version of the user delete request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcUserCreateRequestVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                ("resources_requested", models.JSONField()),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the user"),
                ),
                (
                    "version",
                    models.IntegerField(
                        help_text="Version number of this user create request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcUserCreateRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                ("resources_requested", models.JSONField()),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the user"),
                ),
                (
                    "current_version",
                    models.IntegerField(
                        help_text="Currently active version of the user create request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcUserChangeRequestVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                ("resources_requested", models.JSONField()),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the user"),
                ),
                (
                    "version",
                    models.IntegerField(
                        help_text="Version number of this user change request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcUserChangeRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                ("resources_requested", models.JSONField()),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the user"),
                ),
                (
                    "current_version",
                    models.IntegerField(
                        help_text="Currently active version of the user change request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcGroupVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                ("resources_requested", models.JSONField()),
                ("resources_used", models.JSONField()),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the groups work",
                        max_length=512,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("ACTIVE", "ACTIVE"),
                            ("DELETED", "DELETED"),
                            ("EXPIRED", "EXPIRED"),
                        ],
                        help_text="Status of the group object",
                        max_length=16,
                    ),
                ),
                (
                    "gid",
                    models.IntegerField(help_text="Id of the group on the cluster", null=True),
                ),
                ("name", models.CharField(max_length=64)),
                ("folder", models.CharField(max_length=64)),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the group"),
                ),
                (
                    "version",
                    models.IntegerField(help_text="Version number of this group object"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        help_text="User creating the object",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_creator",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "delegate",
                    models.ForeignKey(
                        blank=True,
                        help_text="User registered as delegate of the group",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_delegate",
                        to="usersec.hpcuser",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        help_text="User registered as owner of the group",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s_owner",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcGroupDeleteRequestVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                (
                    "version",
                    models.IntegerField(
                        help_text="Version number of this group delete request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_requester",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcGroupDeleteRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                (
                    "current_version",
                    models.IntegerField(
                        help_text="Currently active version of the group delete request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_requester",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcGroupCreateRequestVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                ("resources_requested", models.JSONField()),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the groups work",
                        max_length=512,
                    ),
                ),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the group"),
                ),
                (
                    "version",
                    models.IntegerField(
                        help_text="Version number of this group create request object"
                    ),
                ),
                (
                    "delegate",
                    models.ForeignKey(
                        blank=True,
                        help_text="User registered as delegate of the group",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_delegate",
                        to="usersec.hpcuser",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_requester",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcGroupCreateRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                ("resources_requested", models.JSONField()),
                (
                    "description",
                    models.CharField(
                        help_text="Description of the groups work",
                        max_length=512,
                    ),
                ),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the group"),
                ),
                (
                    "current_version",
                    models.IntegerField(
                        help_text="Currently active version of the group create request object"
                    ),
                ),
                (
                    "delegate",
                    models.ForeignKey(
                        blank=True,
                        help_text="User registered as delegate of the group",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_delegate",
                        to="usersec.hpcuser",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_requester",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcGroupChangeRequestVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                ("resources_requested", models.JSONField()),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the group"),
                ),
                (
                    "version",
                    models.IntegerField(
                        help_text="Version number of this group change request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_requester",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HpcGroupChangeRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, help_text="Record UUID", unique=True),
                ),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, help_text="DateTime of creation"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("INITIAL", "INITIAL"),
                            ("REVISION", "REVISION"),
                            ("REVISED", "REVISED"),
                            ("APPROVED", "APPROVED"),
                            ("DENIED", "DENIED"),
                            ("RETRACTED", "RETRACTED"),
                        ],
                        help_text="Status of the request",
                        max_length=16,
                    ),
                ),
                (
                    "comment",
                    models.CharField(
                        help_text="Comment on request or revision",
                        max_length=1024,
                    ),
                ),
                ("resources_requested", models.JSONField()),
                (
                    "expiration",
                    models.DateTimeField(help_text="Expiration date of the group"),
                ),
                (
                    "current_version",
                    models.IntegerField(
                        help_text="Currently active version of the group change request object"
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        help_text="Group the request belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="%(class)s",
                        to="usersec.hpcgroup",
                    ),
                ),
                (
                    "requester",
                    models.ForeignKey(
                        help_text="User creating the request",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="%(class)s_requester",
                        to="usersec.hpcuser",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="hpcgroup",
            name="delegate",
            field=models.ForeignKey(
                blank=True,
                help_text="User registered as delegate of the group",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="%(class)s_delegate",
                to="usersec.hpcuser",
            ),
        ),
        migrations.AddField(
            model_name="hpcgroup",
            name="owner",
            field=models.ForeignKey(
                help_text="User registered as owner of the group",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="%(class)s_owner",
                to="usersec.hpcuser",
            ),
        ),
    ]
